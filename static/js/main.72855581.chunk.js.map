{"version":3,"sources":["components/countriesMap/countriesMapReducer.js","components/attractionsMap/attractionsMapReducer.js","redux/index.js","redux/types.js","redux/store.js","components/login/login.js","pages/loginPage/loginPage.js","data/AllCountries.js","components/countriesMap/countriesMapAction.js","components/countriesMap/countriesMap.js","pages/mapOverviewPage/mapOverviewPage.js","data/allPlaces.js","components/attractionsMap/attractionsMap.js","components/attractionsMap/attractionsMapAction.js","components/attractionsInfo/attractionsInfo.js","pages/attractionsPage/attractionsPage.js","App.js","serviceWorker.js","index.js"],"names":["countriesMapState","countryIDs","countryNames","countryMarkers","currCountry","dataState","places","selectedPlace","hasSelection","combineReducers","countries","state","arguments","length","undefined","action","type","Object","objectSpread","payload_IDs","payload_names","payload_markers","payload","attractions","hasPayload","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","Login","react_default","a","createElement","className","method","id","placeholder","required","value","react_router_dom","to","style","textDecoration","Component","LoginPage","document","body","login_login","AllCountries","name","abbr","xaxis","yaxis","chooseCountries","country","dispatch","console","log","CountriesMap","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickCountry","cntry","renderMarker","marker","lib","key","onClick","default","fill","hover","pressed","cx","cy","r","data-tip","stroke","strokeWidth","opacity","textAnchor","y","markerOffset","fontFamily","fontSize","fontStyle","posUpdated","inherits","createClass","initCountries","setTimeout","ReactTooltip","rebuild","setState","i","_this2","react_router","projectionConfig","scale","width","window","innerWidth","height","innerHeight","center","zoom","geography","geographies","projection","map","indexOf","properties","ADM0_A3","NAME_EN","outline","connect","IDs","names","markers","push","newCoord","newMarker","coordinates","MapOverviewPage","index_esm","countriesMap_countriesMap","dist_default","data","master","category","desc","lat","long","address","postal","contact","hours","website","email","zone","ext_1","ext_2","mapStylesPC","AttractionsMap","onMarkerClick","e","updateSelectedPlace","placeData","latitude","longitude","distance","fetchPlaces","place","google_maps_react_dist","title","position","lng","google","initialCenter","renderMarkers","newPlaces","GoogleApiWrapper","apiKey","AttractionsInfo","str","result","split","forEach","elem","includes","href","vote","infoString","infoVar","hasOwnProperty","convertStringToLinks","registerVote","renderElements","ext_3","renderVoteResults","renderVoting","currentCountry","renderDefaultText","AttractionsPage","goBack","attractionsInfo_attractionsInfo","attractionsMap","App","es","basename","process","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72855581.chunk.js","sourcesContent":["import {\r\n    INIT_COUNTRIES,\r\n    CHOOSE_COUNTRY\r\n } from '../../redux/types';\r\n    \r\nconst countriesMapState = {\r\n    countryIDs: [],\r\n    countryNames: [],\r\n    countryMarkers: [],\r\n\r\n    currCountry: \"\"\r\n}\r\n\r\nexport default function(state = countriesMapState, action) {\r\n    switch(action.type) {\r\n        case INIT_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                countryIDs: action.payload_IDs,\r\n                countryNames: action.payload_names,\r\n                countryMarkers: action.payload_markers\r\n            }\r\n        case CHOOSE_COUNTRY:\r\n            return {\r\n                ...state,\r\n                currCountry: action.payload,\r\n            }\r\n        default:\r\n            return countriesMapState;\r\n    }\r\n}","import {\r\n    FETCH_PLACES,\r\n    UPDATE_SELECTED_PLACE\r\n } from '../../redux/types';\r\n    \r\nconst dataState = {\r\n    places: [],\r\n    selectedPlace: {},\r\n    hasSelection: false\r\n}\r\n\r\nexport default function(state = dataState, action) {\r\n    switch(action.type) {\r\n        case FETCH_PLACES:\r\n            return {\r\n                ...state,\r\n                places: action.payload,\r\n            }\r\n        case UPDATE_SELECTED_PLACE:\r\n            return {\r\n                ...state,\r\n                selectedPlace: action.payload,\r\n                hasSelection: action.hasPayload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport countriesMapReducer from '../components/countriesMap/countriesMapReducer';\r\nimport attractionsMapReducer from '../components/attractionsMap/attractionsMapReducer';\r\n\r\nexport default combineReducers({\r\n    countries: countriesMapReducer,\r\n    attractions: attractionsMapReducer\r\n})","export const INIT_COUNTRIES = 'INIT_COUNTRIES';\r\nexport const CHOOSE_COUNTRY = 'CHOOSE_COUNTRY';\r\nexport const FETCH_PLACES = 'FETCH_PLACES';\r\nexport const UPDATE_SELECTED_PLACE = 'UPDATE_SELECTED_PLACE';\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './login.scss'\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"background\">\r\n                <div className=\"login-item\">\r\n                    <form action=\"\" method=\"post\" className=\"form form-login\">\r\n\r\n                        <div className=\"form-field\">\r\n                            <span className=\"hidden\">Username</span>\r\n                            <input id=\"login-username\" type=\"text\" className=\"form-input\" placeholder=\"Username\" required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-field\">\r\n                            <span className=\"hidden\">Password</span>\r\n                            <input id=\"login-password\" type=\"password\" className=\"form-input\" placeholder=\"Password\" required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-field\">\r\n                        <input type=\"submit\" value=\"Log in\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"middle-text-or\">or</div>\r\n                <Link to=\"/mapoverview\" style={{textDecoration: 'none'}}> <div className=\"button-sign-up\">Sign Up</div> </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport Login from '../../components/login/login';\r\nimport './loginPage.scss'\r\n\r\nclass LoginPage extends Component {\r\n\r\n    render() {\r\n        document.body.style = 'background: rgb(0, 166, 188);';\r\n        return (\r\n        <div className=\"login-container\">\r\n            <div className=\"mainHeader\">TRAVOTE</div>\r\n            <div className=\"subtitle\">Community-driven travel recommendations</div>\r\n            <Login/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","export const AllCountries = [\r\n\t{\r\n\t\t\"name\": \"Singapore\",\r\n\t\t\"abbr\": \"SGP\",\r\n\t\t\"xaxis\": 105,\r\n\t\t\"yaxis\": 0,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Malaysia\",\r\n\t\t\"abbr\": \"MYS\",\r\n\t\t\"xaxis\": 102,\r\n\t\t\"yaxis\": 6,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Philippines\",\r\n\t\t\"abbr\": \"PHL\",\r\n\t\t\"xaxis\": 124,\r\n\t\t\"yaxis\": 15,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Indonesia\",\r\n\t\t\"abbr\": \"IDN\",\r\n\t\t\"xaxis\": 115,\r\n\t\t\"yaxis\": -4,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Brunei\",\r\n\t\t\"abbr\": \"BRN\",\r\n\t\t\"xaxis\": 115,\r\n\t\t\"yaxis\": 5,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Thailand\",\r\n\t\t\"abbr\": \"THA\",\r\n\t\t\"xaxis\": 102,\r\n\t\t\"yaxis\": 16,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Vietnam\",\r\n\t\t\"abbr\": \"VNM\",\r\n\t\t\"xaxis\": 108,\r\n\t\t\"yaxis\": 11,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Myanmar\",\r\n\t\t\"abbr\": \"MMR\",\r\n\t\t\"xaxis\": 96,\r\n\t\t\"yaxis\": 22,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Cambodia\",\r\n\t\t\"abbr\": \"KHM\",\r\n\t\t\"xaxis\": 105,\r\n\t\t\"yaxis\": 13,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Lao\",\r\n\t\t\"abbr\": \"LAO\",\r\n\t\t\"xaxis\": 102,\r\n\t\t\"yaxis\": 20,\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Taiwan\",\r\n\t\t\"abbr\": \"TWN\",\r\n\t\t\"xaxis\": \"121\",\r\n\t\t\"yaxis\": \"24\",\r\n\t},\r\n\t{\r\n\t\t\"name\": \"People's Republic of China\",\r\n\t\t\"abbr\": \"CHN\",\r\n\t\t\"xaxis\": \"100\",\r\n\t\t\"yaxis\": \"25\",\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Hong Kong\",\r\n\t\t\"abbr\": \"HKG\",\r\n\t\t\"xaxis\": \"115\",\r\n\t\t\"yaxis\": \"20\",\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Macau\",\r\n\t\t\"abbr\": \"MAC\",\r\n\t\t\"xaxis\": \"112\",\r\n\t\t\"yaxis\": \"22\",\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Japan\",\r\n\t\t\"abbr\": \"JPN\",\r\n\t\t\"xaxis\": \"138\",\r\n\t\t\"yaxis\": \"36\",\r\n\t},\r\n\t{\r\n\t\t\"name\": \"Korea\",\r\n\t\t\"abbr\": \"KOR\",\r\n\t\t\"xaxis\": \"128\",\r\n\t\t\"yaxis\": \"36\",\r\n\t},\r\n]","import {\r\n    INIT_COUNTRIES,\r\n    CHOOSE_COUNTRY\r\n } from '../../redux/types';\r\n\r\nimport {AllCountries} from '../../data/AllCountries'\r\n\r\nexport const initCountries = () => dispatch => {\r\n\r\n    //SHIKANG: SAVE THE JS FILE DATA IN DB INSTEAD.\r\n\r\n    var IDs = [];\r\n    var names = [];\r\n    var markers = [];\r\n\r\n    for(var i = 0; i < AllCountries.length; ++i) {\r\n\r\n        IDs.push(AllCountries[i].abbr);\r\n        names.push(AllCountries[i].name);\r\n\r\n        var newCoord = [];\r\n        newCoord.push(AllCountries[i].xaxis);\r\n        newCoord.push(AllCountries[i].yaxis);\r\n\r\n        var newMarker = {\r\n            \"markerOffset\": -16,\r\n            \"abbr\": AllCountries[i].abbr,\r\n            \"name\": AllCountries[i].name,\r\n            \"coordinates\": newCoord\r\n        }\r\n        markers.push(newMarker);\r\n    }\r\n\r\n    dispatch({\r\n        type: INIT_COUNTRIES,\r\n        payload_IDs: IDs,\r\n        payload_names: names,\r\n        payload_markers: markers\r\n    })\r\n}\r\n\r\nexport const chooseCountries = (country) => dispatch => {\r\n    console.log(\"C: \" + country);\r\n    dispatch({\r\n        type: CHOOSE_COUNTRY,\r\n        payload: country\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from 'react-simple-maps';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {initCountries, chooseCountries} from './countriesMapAction';\r\nimport './countriesMap.scss';\r\n  \r\nexport class CountriesMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cx: 0,\r\n            cy: 0,\r\n            posUpdated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initCountries();\r\n        setTimeout(() => {\r\n          ReactTooltip.rebuild()\r\n        }, 100)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        // For some reason, we need to force update the position after the\r\n        // first render to get it right.\r\n        if(!this.state.posUpdated) {\r\n            this.setState({\r\n                cx: 105,\r\n                cy: 20,\r\n                posUpdated: true\r\n            })\r\n        }\r\n    }\r\n\r\n    toCountryName(abbr) {\r\n\r\n        for(var i = 0; i < this.props.countryIDs.length; ++i) {\r\n            if(this.props.countryIDs[i] === abbr) {\r\n                return this.props.countryNames[i];\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    toCountryABBR(name) {\r\n\r\n        for(var i = 0; i < this.props.countryNames.length; ++i) {\r\n            if(this.props.countryNames[i] === name) {\r\n                return this.props.countryIDs[i];\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    onClickCountry = (cntry) => {\r\n        this.props.chooseCountries(cntry);\r\n    }\r\n\r\n    renderMarker = (marker, id) => {\r\n\r\n        return(\r\n        <Marker\r\n            key={id}\r\n            marker={marker}\r\n            onClick={() => this.onClickCountry(marker.name)}\r\n            style={{\r\n                default: { fill: \"#FF5722\" },\r\n                hover: { fill: \"#FFFFFF\" },\r\n                pressed: { fill: \"#FF5722\" },\r\n            }}\r\n        >\r\n\r\n        <circle\r\n            cx={0}\r\n            cy={0}\r\n            r={8}\r\n            data-tip={marker.name}\r\n            style={{\r\n                stroke: \"#FF5722\",\r\n                strokeWidth: 6,\r\n                opacity: 0.9,\r\n            }}\r\n        />\r\n        \r\n        <text\r\n            textAnchor=\"middle\"\r\n            y={marker.markerOffset}\r\n            style={{\r\n                fontFamily: \"Roboto, sans-serif\",\r\n                fontSize:\"14px\",\r\n                fontStyle:\"bold\",\r\n                fill: \"#000080\",\r\n            }}\r\n            >\r\n            {marker.abbr}\r\n        </text>\r\n\r\n        </Marker>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        \r\n        if(this.props.currCountry !== \"\") {\r\n            return <Redirect to=\"/attractions\" />\r\n        }\r\n\r\n        return(\r\n            <div className=\"cmap-container\">\r\n            <ComposableMap\r\n                projectionConfig={{ scale: 400 }}\r\n                width={window.innerWidth*0.9}\r\n                height={window.innerHeight*0.9}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"auto\",\r\n                }}\r\n            >\r\n\r\n            <ZoomableGroup center={[ this.state.cx, this.state.cy ]} zoom={2}>\r\n                <Geographies geography=\"/allcountries50.json\">\r\n                {(geographies, projection) =>\r\n                    geographies.map((geography, i) => (\r\n                    //console.log(geography.properties.NAME_EN + \", \" + geography.properties.ADM0_A3),\r\n                    this.props.countryIDs.indexOf(geography.properties.ADM0_A3) !== -1 &&\r\n                    (\r\n                    <Geography\r\n                        key={i}\r\n                        data-tip={geography.properties.NAME_EN}\r\n                        onClick={() => this.onClickCountry(geography.properties.NAME_EN)}\r\n                        geography={geography}\r\n                        projection={projection}\r\n                        style={{\r\n                        default: {\r\n                            fill: \"#ECEFF1\",\r\n                            stroke: \"#607D8B\",\r\n                            strokeWidth: 0.75,\r\n                            outline: \"none\",\r\n                        },\r\n                        hover: {\r\n                            fill: \"#607D8B\",\r\n                            stroke: \"#607D8B\",\r\n                            strokeWidth: 0.75,\r\n                            outline: \"none\",\r\n                        },\r\n                        pressed: {\r\n                            fill: \"#19BE7F\",\r\n                            stroke: \"#607D8B\",\r\n                            strokeWidth: 0.75,\r\n                            outline: \"none\",\r\n                        },\r\n                        }}\r\n                    />\r\n                    )))\r\n                }\r\n                </Geographies>\r\n\r\n                 <Markers>\r\n                    {this.props.countryMarkers.map(this.renderMarker)}\r\n                </Markers>\r\n\r\n            </ZoomableGroup>\r\n            </ComposableMap> \r\n            </div>     \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryIDs: state.countries.countryIDs,\r\n    countryMarkers: state.countries.countryMarkers,\r\n    countryNames: state.countries.countryNames,\r\n    currCountry: state.countries.currCountry\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {initCountries, chooseCountries})(CountriesMap);","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport CountriesMap from '../../components/countriesMap/countriesMap';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport './mapOverviewPage.scss'\r\n\r\nclass MapOverviewPage extends Component {\r\n\r\n    render() {\r\n        document.body.style = 'background: rgb(255, 255, 255);';\r\n        return(\r\n            <div className=\"countries-container\">\r\n                <div className=\"header-strip\">\r\n                    <Link to=\"/\"> <FaArrowLeft className=\"back-arrow\" />Back</Link>\r\n                </div>\r\n                <div className=\"instructions\">Please choose your destination.</div>\r\n                <CountriesMap/>\r\n                <ReactTooltip/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MapOverviewPage;\r\n           ","export const data = [\r\n\t{\r\n\t\t\"id\": \"1\",\r\n\t\t\"name\": \"Lam's Kitchen\",\r\n\t\t\"master\" : \"Food\",\r\n\t\t\"category\": \"Food\",\r\n\t\t\"desc\": \"super lam food\", \r\n\t\t\"lat\": \"1.316450\",\r\n\t\t\"long\": \"103.858313\",\r\n\t\t\"address\": \"460 Race Course Rd\",\r\n\t\t\"postal\": \"218700\",\r\n\t\t\"contact\": \"6398 1154\",\r\n\t\t\"hours\": \"1030am - 930pm\",\r\n\t\t\"website\": \"https://www.lamskitchen.com/\",\r\n\t\t\"email\": \"admin@lamskitchen.com\",\r\n\t\t\"zone\": \"North-East\",\r\n\t\t\"ext_1\": \"https://sethlui.com/lams-kitchen-salted-baked-chicken-abalone-soup-race-course-road-singapore/\",\r\n\t},\r\n\t{\r\n\t\t\"id\": \"2\",\r\n\t\t\"name\": \"Swee Choon Tim Sum Restaurant\",\r\n\t\t\"master\" : \"Food\",\r\n\t\t\"category\": \"Food\",\r\n\t\t\"desc\": \"super good dim sum\", \r\n\t\t\"lat\": \"1.308452\",\r\n\t\t\"long\": \"103.856858\",\r\n\t\t\"address\": \"Jln Besar, 183-191\",\r\n\t\t\"postal\": \"208882\",\r\n\t\t\"contact\": \"6225 7788\",\r\n\t\t\"hours\": \"11am - 230pm, 6pm - 6am\",\r\n\t\t\"website\": \"-\",\r\n\t\t\"email\": \"-\",\r\n\t\t\"zone\": \"North-East\",\r\n\t\t\"ext_1\": \"-\",\r\n\t\t\"ext_2\": \"-\",\r\n\t},\r\n\t{\r\n\t\t\"id\": \"3\",\r\n\t\t\"name\": \"Tim Ho Wan\",\r\n\t\t\"master\" : \"Food\",\r\n\t\t\"category\": \"Food\",\r\n\t\t\"desc\": \"super tim\", \r\n\t\t\"lat\": \"1.309589\",\r\n\t\t\"long\": \"103.864153\",\r\n\t\t\"address\": \"12 Kallang Ave, #01-01/02 03 Aperia\",\r\n\t\t\"postal\": \"339511\",\r\n\t\t\"contact\": \"6684 2000\",\r\n\t\t\"hours\": \"9am - 11pm\",\r\n\t\t\"website\": \"http://www.timhowan.com/\",\r\n\t\t\"email\": \"customercare@timhowan.com\",\r\n\t\t\"zone\": \"North-East\",\r\n\t},\r\n\t{\r\n\t\t\"id\": \"4\",\r\n\t\t\"name\": \"Happy Chef Western Food\",\r\n\t\t\"master\" : \"Food\",\r\n\t\t\"category\": \"Food\",\r\n\t\t\"desc\": \"super happy\", \r\n\t\t\"lat\": \"1.305739\",\r\n\t\t\"long\": \"103.862480\",\r\n\t\t\"address\": \"466 Crawford Ln\",\r\n\t\t\"postal\": \"190466\",\r\n\t\t\"contact\": \"6398 0773\",\r\n\t\t\"hours\": \"11am - 9pm\",\r\n\t\t\"zone\": \"North-East\",\r\n\t\t\"ext_1\": \"https://www.misstamchiak.com/happy-chef-western-food/\",\r\n\t\t\"ext_2\": \"https://sethlui.com/happy-chef-western-food-singapore/\",\r\n\t},\r\n\t{\r\n\t\t\"id\": \"5\",\r\n\t\t\"name\": \"Chye Seng Huat Hardware\",\r\n\t\t\"master\" : \"Food\",\r\n\t\t\"category\": \"Food\",\r\n\t\t\"desc\": \"super chye\", \r\n\t\t\"lat\": \"1.311891\",\r\n\t\t\"long\": \"103.860360\",\r\n\t\t\"address\": \"150 Tyrwhitt Rd\",\r\n\t\t\"postal\": \"207563\",\r\n\t\t\"contact\": \"6396 0609\",\r\n\t\t\"hours\": \"9am - 10pm\",\r\n\t\t\"website\": \"http://www.cshhcoffee.com/\",\r\n\t\t\"zone\": \"North-East\",\r\n\t},\r\n]","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Map, GoogleApiWrapper, Marker} from 'google-maps-react';\r\nimport {fetchPlaces, updateSelectedPlace} from './attractionsMapAction';\r\n\r\nconst mapStylesPC = {\r\n    width: '80%',\r\n    height: '100%'\r\n};\r\n\r\nexport class AttractionsMap extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            latitude: 1.319190,\r\n            longitude: 103.857834,\r\n            distance: 3\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPlaces(this.state.latitude, this.state.longitude, this.state.distance);\r\n    }\r\n\r\n    onMarkerClick = (props, marker, e) => {\r\n        //console.log(props.placeData);\r\n        this.props.updateSelectedPlace(props.placeData);\r\n    }\r\n\r\n    isMobile() {\r\n        //return (window.innerHeight / window.innerWidth) > 1.6;\r\n    }\r\n\r\n    renderMarkers(place) {\r\n        //console.log(place);\r\n\r\n       /* if(this.props.hasFilterData) {\r\n\r\n            if( this.props.filterType === \"Master Category\" &&\r\n                this.props.filterData !== place.MasterCategory) {\r\n                    return;\r\n            }\r\n\r\n            if( this.props.filterType === \"Category\" &&\r\n                this.props.filterData !== place.Category) {\r\n                    return;\r\n            }\r\n\r\n            if( this.props.filterType === \"Zone\" &&\r\n                this.props.filterData !== place.Zone) {\r\n                    return;\r\n            }\r\n        }*/\r\n\r\n        return (\r\n            <Marker\r\n                key={place.id}\r\n                title={place.name}\r\n                name={place.name}\r\n                position={{lat: place.lat, lng: place.long}}\r\n                placeData={place}\r\n                onClick={this.onMarkerClick}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Map\r\n                    google={this.props.google}\r\n                    zoom={14}\r\n                    style={mapStylesPC}\r\n                    initialCenter={{\r\n                        lat: this.state.latitude,\r\n                        lng: this.state.longitude\r\n                    }}\r\n                >\r\n                {this.props.places.map(place => this.renderMarkers(place))}\r\n                </Map>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    places: state.attractions.places,\r\n    /*selectedPlace: state.mapContainer.selectedPlace,\r\n\r\n    masterCategoryList: state.filterSection.masterCategoryList,\r\n    categoryList: state.filterSection.categoryList,\r\n    zoneList: state.filterSection.zoneList,\r\n\r\n    hasFilterData: state.filterSection.hasFilterData,\r\n    filterType: state.filterSection.filterType,\r\n    filterData: state.filterSection.filterData*/\r\n});\r\n\r\nexport default connect(mapStateToProps, {fetchPlaces, updateSelectedPlace})(GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBNoS6JelKyYuk7R1iEyfKJ_h61YSIfjGs'\r\n})(AttractionsMap));","import {\r\n    FETCH_PLACES,\r\n    UPDATE_SELECTED_PLACE\r\n} from '../../redux/types';\r\n\r\nimport {data} from '../../data/allPlaces';\r\n\r\n/*function hasData(data_) {\r\n    return data_ !== '' && data_ !== '-';\r\n}*/\r\n\r\nexport const fetchPlaces = (latitude, longitude, distance//,\r\n                            //masterCategoryList, categoryList, zoneList\r\n                            ) => dispatch => {\r\n    \r\n    /* SHIKANG: Convert to fetch json data\r\n    let path = 'https://www.dropbox.com/home/Public/places.json';// + latitude + '/' + longitude + '/' + distance;\r\n    fetch(path)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        // Extract Filter Data\r\n        /*for(var i = 0; i < data.length; ++i) {\r\n\r\n        dispatch({\r\n            type: FETCH_PLACES,\r\n            payload: data\r\n        })\r\n        }\r\n    );*/\r\n\r\n    var newPlaces = [];\r\n    for(var i = 0; i < data.length; ++i) {\r\n        newPlaces.push(data[i]);\r\n    }\r\n\r\n    dispatch({\r\n        type: FETCH_PLACES,\r\n        payload: newPlaces\r\n    })\r\n}\r\n\r\nexport const updateSelectedPlace = (selectedPlace, hasSelection = true) => dispatch => {\r\n\r\n    dispatch({\r\n        type: UPDATE_SELECTED_PLACE,\r\n        payload: selectedPlace,\r\n        hasPayload: hasSelection\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './attractionsInfo.scss';\r\n\r\nimport {\r\n    FaCommentAlt,\r\n    FaClock,\r\n    FaPhone,\r\n    FaGlobeAmericas,\r\n    FaEnvelope,\r\n    FaHome,\r\n    FaMapMarker,\r\n    FaRegArrowAltCircleUp,\r\n    FaRegArrowAltCircleDown\r\n} from 'react-icons/fa';\r\n\r\nexport class AttractionsInfo extends Component {\r\n\r\n    // Find hyperlinks in the string and convert them into clickable links.\r\n    convertStringToLinks(str) {\r\n        let result = [];\r\n        let input = str.split(' ');\r\n\r\n        input.forEach(elem => {\r\n            if(elem.includes(\"http://\") || elem.includes(\"https://\")) {\r\n                result.push(<a key={result.length} href={elem}>{elem}</a>);\r\n            }\r\n            else {\r\n                result.push(elem);\r\n            }\r\n            result.push(' ');\r\n        });\r\n        return result;\r\n    }\r\n\r\n    registerVote(vote) {\r\n\r\n        // SHIKANG: Check if user is logged in. If not, popup to login.\r\n        // Votes can change, then numbers have to change also.\r\n        // Display current amount of upvotes and downvotes.\r\n        // If user already voted, highlight the vote he cast (either upvote or downvote)\r\n        if(vote === 1) {\r\n         console.log(\"Upvote\")\r\n        }\r\n        else if(vote === -1) {\r\n            console.log(\"Downvote\");\r\n        }\r\n    }\r\n\r\n    renderDefaultText() {\r\n        if(this.props.places.length < 1) {\r\n            return <div className=\"info-section-default-text\">No places nearby. Are you sure you have the right coordinates?</div>\r\n        }\r\n        return <div className=\"info-section-default-text\">Click on a pin to start looking!</div>\r\n        }\r\n    \r\n    renderElements(infoString, infoVar) {\r\n        if(this.props.selectedPlace.hasOwnProperty(infoString) && infoVar !== \"-\" && infoVar !== \"\") {\r\n\r\n            switch(infoString) {\r\n\r\n                case \"desc\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaCommentAlt/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"hours\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaClock/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"contact\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaPhone/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"website\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaGlobeAmericas/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"email\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaEnvelope/> </span>\r\n                            <span><a href={\"mailto:\"+infoVar}>{infoVar}</a></span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"address\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaHome/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"zone\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaMapMarker/> </span>\r\n                            <span>{infoVar}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"ext_1\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaGlobeAmericas/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"ext_2\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaGlobeAmericas/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                case \"ext_3\":\r\n                    return (\r\n                        <div className=\"info-section-info\">\r\n                            <span className=\"info-section-icon\"> <FaGlobeAmericas/> </span>\r\n                            <span>{this.convertStringToLinks(infoVar)}</span> \r\n                            <div className=\"info-section-hr\"><hr/></div>\r\n                        </div>\r\n                    )\r\n\r\n                default:\r\n                    return null;\r\n            }\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    renderVoteResults() {\r\n        return (\r\n            <div className=\"info-section-info\">\r\n                <span className=\"info-section-icon\"> <FaRegArrowAltCircleUp/> </span>\r\n                <span>13</span>\r\n                <div className=\"info-section-hr\"><hr/></div>\r\n\r\n                <span className=\"info-section-icon\"> <FaRegArrowAltCircleDown/> </span>\r\n                <span>18</span>\r\n                <div className=\"info-section-hr\"><hr/></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Render Voting\r\n    renderVoting() {\r\n        return (\r\n            <div className=\"info-section-info-vote\">\r\n                <div className=\"info-section-desc-vote\">ADD YOUR VOTE</div> \r\n                <span className=\"info-section-icon-vote\"> <FaRegArrowAltCircleUp onClick={ () => this.registerVote(1)}/> </span>\r\n                <span className=\"info-section-icon-vote\"> <FaRegArrowAltCircleDown onClick={ () => this.registerVote(-1)}/> </span>\r\n                <div className=\"info-section-hr\"><hr/></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.props.hasSelection) {\r\n            return (\r\n                <div className=\"info-section\">\r\n                    <div className=\"info-section-headerbg\">\r\n                        <div className=\"info-section-header\">{this.props.selectedPlace.name}</div>\r\n                        <div className=\"info-section-category\">{this.props.selectedPlace.category}</div>\r\n                    </div>\r\n\r\n                    <div className=\"info-section-gap\"></div>\r\n\r\n                    {this.renderElements(\"desc\", this.props.selectedPlace.desc)}\r\n                    {this.renderElements(\"hours\", this.props.selectedPlace.hours)}\r\n                    {this.renderElements(\"contact\", this.props.selectedPlace.contact)}\r\n\r\n                    {this.renderElements(\"website\", this.props.selectedPlace.website)}\r\n                    {this.renderElements(\"email\", this.props.selectedPlace.email)}\r\n\r\n                    {this.renderElements(\"address\", this.props.selectedPlace.address)}\r\n                    {this.renderElements(\"zone\", this.props.selectedPlace.zone)}\r\n\r\n                    {this.renderElements(\"ext_1\", this.props.selectedPlace.ext_1)}\r\n                    {this.renderElements(\"ext_2\", this.props.selectedPlace.ext_2)}\r\n                    {this.renderElements(\"ext_3\", this.props.selectedPlace.ext_3)}\r\n\r\n                    {this.renderVoteResults()}\r\n                    {this.renderVoting()}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"info-section\">\r\n                 <div className=\"info-section-headerbg\">\r\n                    <div className=\"info-section-header\">{this.props.currentCountry}</div>\r\n                    <div className=\"info-section-category\">What's nice nearby?</div>\r\n                </div>\r\n                <div className=\"info-section-icon\">\r\n                    {this.renderDefaultText()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentCountry: state.countries.currCountry,\r\n    places: state.attractions.places,\r\n    selectedPlace: state.attractions.selectedPlace,\r\n    hasSelection: state.attractions.hasSelection\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AttractionsInfo);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport './attractionsPage.scss'\r\nimport AttractionsMap from '../../components/attractionsMap/attractionsMap';\r\nimport AttractionsInfo from '../../components/attractionsInfo/attractionsInfo';\r\nimport {chooseCountries} from '../../components/countriesMap/countriesMapAction';\r\n\r\nclass AttractionsPage extends Component {\r\n\r\n    goBack = (name) => {\r\n        this.props.chooseCountries(\"\");\r\n    }\r\n\r\n    render() {\r\n        document.body.style = 'background: rgb(255, 255, 255);';\r\n        return(\r\n            <div className=\"attractions-container\">\r\n                <div className=\"header-strip\">\r\n                    <Link to=\"/mapoveriew\"> <FaArrowLeft className=\"back-arrow\" onClick={this.goBack} />Back</Link>\r\n                </div>\r\n                <AttractionsInfo className=\"attractions-info\" />\r\n                <AttractionsMap className=\"attractions-map\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, {chooseCountries})(AttractionsPage);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport LoginPage from './pages/loginPage/loginPage';\nimport MapOverviewPage from './pages/mapOverviewPage/mapOverviewPage'; \nimport AttractionsPage from './pages/attractionsPage/attractionsPage'; \n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route path=\"/\" exact component={LoginPage}/>\n            <Route path=\"/login\" component={LoginPage}/>\n            <Route path=\"/mapoverview\" component={MapOverviewPage}/>\n            <Route path=\"/attractions\" component={AttractionsPage}/>\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}